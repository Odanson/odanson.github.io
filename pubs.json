<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <title>My Website</title>
  <style>
    /* Styles omitted for brevity */
  </style>
</head>
<body>
  <!-- Content omitted for brevity -->

  <script>
    // Other script content omitted for brevity

    // BibTeX drag-and-drop setup
    const drop = document.getElementById('bibDrop');
    const fileInput = document.getElementById('bibFile');

    // Enable imports locally (localhost/127.0.0.1/.local) or when ?admin is present
    const IMPORT_ENABLED =
      location.hostname === 'localhost' ||
      location.hostname === '127.0.0.1' ||
      location.hostname.endsWith('.local') ||
      location.search.includes('admin');
    // On production without ?admin, remove the UI
    if (!IMPORT_ENABLED) { drop?.remove(); }

    if (IMPORT_ENABLED && drop) {
      ['dragenter','dragover'].forEach(ev => drop.addEventListener(ev, e => {
        e.preventDefault(); e.stopPropagation(); drop.classList.add('drop-active');
      }));
      ['dragleave','drop'].forEach(ev => drop.addEventListener(ev, e => {
        e.preventDefault(); e.stopPropagation(); drop.classList.remove('drop-active');
      }));
      drop.addEventListener('drop', e => {
        const f = e.dataTransfer.files?.[0]; if (!f) return;
        const reader = new FileReader(); reader.onload = ev => handleBibText(ev.target.result); reader.readAsText(f);
      });
    }
    if (IMPORT_ENABLED && fileInput) {
      fileInput.addEventListener('change', e => {
        const f = e.target.files?.[0]; if (!f) return;
        const reader = new FileReader(); reader.onload = ev => handleBibText(ev.target.result); reader.readAsText(f);
      });
    }

    // Other script content omitted for brevity
  </script>
</body>
</html>